<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
      http://www.springframework.org/schema/security 
      http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx.xsd">
 
  <http auto-config="true" >





        <intercept-url pattern="/adminpa" access="hasRole('ROLE_ADMIN')"/>
        <form-login login-page="/Login" login-processing-url="/perform_login"
         default-target-url="" 
			authentication-failure-url="/Login" 
			username-parameter="username"
			password-parameter="password"  /> 
			<csrf disabled="true"/>
    </http>
    
  
   <!--  <authentication-manager >
        <authentication-provider>
            <user-service>
                <user name="bill"  password="abc123"  authorities="ROLE_USER" />
                <user name="admin" password="root123" authorities="ROLE_ADMIN" />
                <user name="dba"   password="root123" authorities="ROLE_ADMIN,ROLE_DBA" />
            </user-service>
        </authentication-provider>
    </authentication-manager> -->
    
    <authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource" users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  " />
	  </authentication-provider>
	</authentication-manager>
    
    
    
      
</beans:beans>